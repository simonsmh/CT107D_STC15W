C51 COMPILER V9.02   EX12                                                                  05/13/2018 16:31:25 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE EX12
OBJECT MODULE PLACED IN ex12.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ex12.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：DS18B20温度传感器实验
   3          * 实验目的：1.掌握单总线通讯基本特点和工作时序
   4          *           2.掌握51单片机模拟单总线时序的程序设计方法
   5          *           3.掌握DS18B20温度传感器的操作方法
   6          * 程序说明：1.通过数码管显示实时温度数据
   7          *           2.DS18B20数据线引脚DQ与单片机P1.4引脚连接
   8          *           3.测量精度为1摄氏度
   9          *           4.数码管驱动函数采用IO方式编写，将跳线J13调整为IO模式
  10          * 日期版本：2012-9-5/V1.0a 
  11          *******************************************************************************/
  12          
  13          #include "reg52.h"  //定义51单片机特殊功能寄存器
  14          #include "onewire.h"  //单总线函数库
  15          #include "absacc.h"
  16          
  17          unsigned char dspbuf[8] = {10,10,10,10,10,10,0,0};//显示缓冲区
  18          unsigned char dspcom = 0;
  19          unsigned char intr;
  20          bit temper_flag = 0;//温度读取标志
  21          code unsigned char tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  22                                      0xff};
  23          
  24          void display(void);
  25          
  26          //主函数
  27          void main(void)
  28          { 
  29   1          unsigned char temperature;
  30   1          
  31   1          TMOD |= 0x01;  //配置定时器工作模式
  32   1          TH0 = (65536-2000)/256;
  33   1          TL0 = (65536-2000)%256;  
  34   1          EA = 1;
  35   1          ET0 = 1;  //打开定时器中断
  36   1          TR0 = 1;  //启动定时器
  37   1              
  38   1          while(1)
  39   1          {
  40   2              if(temper_flag)
  41   2                      {
  42   3                              temper_flag = 0;
  43   3                              temperature = rd_temperature();  //读温度         
  44   3              }
  45   2                      
  46   2                      //显示数据更新    
  47   2                      dspbuf[6] = temperature/10;       
  48   2                      dspbuf[7] = temperature%10; 
  49   2          }
  50   1      }
  51          
  52          //定时器中断服务函数
  53          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  54          {
  55   1          TH0 = (65536-2000)/256;
C51 COMPILER V9.02   EX12                                                                  05/13/2018 16:31:25 PAGE 2   

  56   1          TL0 = (65536-2000)%256;  //定时器重载  
  57   1          display();
  58   1              if(++intr == 5)  //2ms执行一次
  59   1              {
  60   2              intr = 0;
  61   2                      temper_flag = 1;  //200ms温度读取标志位置1
  62   2          }
  63   1      }
  64          
  65          //显示函数
  66          void display(void)
  67          {   
  68   1              P2 = ((P2&0x1f)|0xE0); 
  69   1              P0 = 0xff;
  70   1              P2 &= 0x1f;
  71   1      
  72   1              P2 = ((P2&0x1f)|0xC0); 
  73   1              P0 = 1<<dspcom;
  74   1              P2 &= 0x1f;
  75   1              
  76   1          P2 = ((P2&0x1f)|0xE0); 
  77   1              P0 = tab[dspbuf[dspcom]];
  78   1              P2 &= 0x1f;
  79   1        
  80   1          if(++dspcom == 8){
  81   2              dspcom = 0;
  82   2          }    
  83   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
