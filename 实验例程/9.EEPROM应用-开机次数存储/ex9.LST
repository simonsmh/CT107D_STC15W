C51 COMPILER V9.02   EX9                                                                   05/15/2018 12:55:58 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE EX9
OBJECT MODULE PLACED IN ex9.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ex9.c BROWSE DEFINE(EEPROM_AT24C02) DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：开机次数存储实验,按下复位按键，或重新上电，数码管显示+1
   3          * 实验目的：1.掌握I2C总线通讯基本特点和工作时序
   4          *           2.掌握51单片机模拟I2C总线时序的程序设计方法
   5          *           3.掌握EEPROM存储器的特性及AT24C02的读写操作方法
   6          * 程序说明：使用程序时，需要在Preprocessor Symbols 中加入宏定义：EEPROM_AT24C02
   7          * 日期版本：2012-9-4/V1.0a 
   8          *******************************************************************************/
   9          #include "reg52.h"  //定义51单片机特殊功能寄存器
  10          #include "i2c.h"    //I2C总线驱动库 
  11          #include "absacc.h"
  12          /*
  13          code unsigned char tab[] = { 0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  14                                       0xff
  15                                     };
  16          unsigned char dspbuf[8] = {10,10,10,10,10,0,0,0};  //显示缓冲区
  17          unsigned char dspcom = 0;
  18          
  19          void display(void);
  20          
  21          //主函数
  22          void main(void)
  23          { 
  24              unsigned char reset_cnt;  //开机次数存储 (最大存储值255)
  25              
  26              
  27              TMOD |= 0x01;  //配置定时器工作模式
  28              TH0 = (65536-2000)/256;
  29              TL0 = (65536-2000)%256;  
  30              EA = 1;
  31              ET0 = 1;  //打开定时器中断
  32              TR0 = 1;  //启动定时器
  33          
  34          //      write_eeprom(0x00,0x00);  //EEPROM中存储的数据需要进行初始化
  35                  
  36              reset_cnt = read_eeprom(0x00);  //从AT24C02地址0x00中读取数据
  37              reset_cnt++;
  38              write_eeprom(0x00,reset_cnt);  //向AT24C02地址0x00中写入数据
  39          
  40              //更新显示数据
  41              dspbuf[5] = reset_cnt/100;       
  42              dspbuf[6] = reset_cnt%100/10;       
  43              dspbuf[7] = reset_cnt%10;       
  44              XBYTE[0xa000] = 0x00;
  45              while(1)
  46              {
  47                  ;
  48              }
  49          }
  50          
  51          //定时器中断服务函数
  52          void isr_timer_0(void)  interrupt 1  //默认中断优先级 1
  53          {
  54              TH0 = (65536-2000)/256;
  55              TL0 = (65536-2000)%256;  //定时器重载 
C51 COMPILER V9.02   EX9                                                                   05/15/2018 12:55:58 PAGE 2   

  56               
  57              display();
  58          }
  59          
  60          //显示函数
  61          void display(void)
  62          {   
  63                  XBYTE[0xE000] = 0xff;  //消隐
  64                  
  65                  XBYTE[0xC000] = (1<<dspcom);
  66              XBYTE[0xE000] = tab[dspbuf[dspcom]]; //段码
  67             
  68              if(++dspcom == 8){
  69                  dspcom = 0;
  70              }    
  71          } */
  72          
  73          #include <reg52.h>
  74          #include <absacc.h>
  75          #include <i2c.h>
  76          
  77          sbit buzz = P0^6;
  78          
  79          extern void EEPROM_Write(unsigned char addr,unsigned char dat);
  80          extern unsigned char EEPROM_Read(unsigned char addr);
  81          
  82          void main(){
  83   1              unsigned char cnt = 0xF0;
  84   1              
  85   1              P2 = P2&0x1F|0xA0;
  86   1              buzz = 0;
  87   1      
  88   1              cnt = EEPROM_Read(0x00);
  89   1              cnt++;
  90   1              EEPROM_Write(0x00,cnt);
  91   1              P2 = P2&0x1F|0x80;
  92   1              P0 = EEPROM_Read(0x00);
  93   1              while(1);
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     42    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
